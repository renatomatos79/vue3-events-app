trigger:
  batch: true
  branches:
    include:
      - master

pr:
  branches:
    include:
      - master

pool: 'Renato Laptop'

variables:
  NODE_VERSION: '18.x'
  SONARQUBE_ORGANIZATION: 'renatomatos79'
  SONARQUBE_PROJECT_NAME: 'vue3-events-app-v2'
  SONARQUBE_PROJECT_KEY: 'renatomatos79_vue3-events-app-v2'
  SONARQUBE_CONNECTION_NAME: 'SonarCloudConnection'
  SONARQUBE_SCANNER_MODE: 'CLI'

steps:
  - checkout: self
    fetchDepth: 0

  - task: NodeTool@0
    inputs:
      versionSpec: $(NODE_VERSION)
    displayName: 'Install Node.js'

  - script: |
      npm install
    displayName: 'Install dependencies'

  - script: |
      npm run lint
    displayName: 'Run lint'

  - task: SonarCloudPrepare@2
    inputs:
      SonarCloud: 'SonarCloudConnection'
      organization: $(SONARQUBE_ORGANIZATION)
      scannerMode: 'CLI'
      configMode: 'manual'
      cliProjectKey: $(SONARQUBE_PROJECT_KEY)
      cliProjectName: $(SONARQUBE_PROJECT_NAME)
      cliSources: '.'
    displayName: 'Preparing SonarCloud'

  - script: |
      npm run build-only-mock
    displayName: 'Build the project'

  - script: |
      npm run test:coverage
    displayName: 'Run test:coverage'

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: 'coverage/cobertura-coverage.xml'
      reportDirectory: 'coverage'
      failIfCoverageEmpty: true

  - task: SonarCloudAnalyze@2
    inputs:
      jdkversion: 'JAVA_HOME'
    displayName: 'Running SonarCloud Analyze'

  - task: SonarCloudPublish@2
    inputs:
      pollingTimeoutSec: '300'
    displayName: 'Publishing to SonarCloud'
